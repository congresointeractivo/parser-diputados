#!/usr/bin/env ruby
# encoding: utf-8

# == Synopsis 
#   parser_diputados is a utility that scrap and generate a JSON file from www.diputados.gov.ar
#   
#
# == Examples
#     parser_diputados
#
#   Other examples:
#     parser_diputados -o diputados.json
#     parser_diputados | python -mjson.tool
#
# == Usage 
#   parser_diputados [options]
#
#   For help use: parser_diputados -h
#
# == Options
#   -h, --help            Displays help message
#   -o, --output FILENAME Save the output to a file
#   -c, --[no-]cache      Use cache if exist
#
#   TODO - Group diputados by block
#
# == Author
#   Alfredo Ramirez
# 	MartÃ­n Szyszlican
#
# == Copyright
#   Copyright (c) 2014 Congreso Interactivo. Licensed under the MIT License:
#   http://www.opensource.org/licenses/mit-license.php

$LOAD_PATH.unshift("#{File.dirname(__FILE__)}/lib")

require 'optparse'
require 'parser_diputados'
require 'parser_popit'
require 'popit'

options = {}
options[:cache] = true

optparse = OptionParser.new do |option_parser|
  option_parser.banner = "Usage: parser_diputados [options]"

  option_parser.on("-o", "--output FILENAME", "Save the output to a file") do |o|
    options[:output] = o
  end

  option_parser.on("-c", "--[no-]cache", "Use cache") do |c|
    options[:cache] = c
  end

  option_parser.on("-i n", "--instance=n", "Send every row this instance of the PopIt Api on popit.mysociety.org. Default legisladores-ar [INSTANCE]") do |instance|
    options[:instance_name] = instance
  end

  option_parser.on("-u n", "--user=n", "API user [USERNAME]") do |user|
    options[:api_user] = user
  end

  option_parser.on("-p n", "--password=n", "API password [PASSWORD]") do |pass|
    options[:api_pass] = pass
  end
end

optparse.parse!

if options[:instance_name]
  #Initialize API
  options[:api] = PopIt.new(
    :instance_name => options[:instance_name],
    :user => options[:api_user],
    :password => options[:api_pass]
  )
end

parser = ParserDiputados.new options
parser.run

exit 0
